#!/usr/bin/env bash

# Django Collectstatic runner. If you have Django installed, collectstatic will
# automatically be executed as part of the build process. If collectstatic
# fails, your build fails.

# This functionality will only activate if Django is in requirements.txt.

# Runtime arguments:
#   - $DISABLE_COLLECTSTATIC: disables this functionality.
#   - $DEBUG_COLLECTSTATIC: upon failure, print out environment variables.

source $BIN_DIR/utils

# Location of 'manage.py', if it exists.
MANAGE_FILE=$(find . -maxdepth 3 -type f -name 'manage.py' -printf '%d\t%P\n' | sort -nk1 | cut -f2 | head -1)
MANAGE_FILE=${MANAGE_FILE:-fakepath}

env

if [ ! -d $TARGET_DIR/gettext ]; then
    echo "-----> Installing gettext msgfmt..."

    GETTEXT_TARBALL=ftp://spinellicreations.com/gnu/gettext/gettext-latest.tar.xz

    pushd $BUILD_DIR >/dev/null
    rm -f tmp-gettext.tar.xz

    curl -s -L -o tmp-gettext.tar.xz "$GETTEXT_TARBALL"
    tar -zJvf tmp-gettext.tar.xz > /dev/null
    rm tmp-gettext.tar.xz
    popd >/dev/null

    export PATH=$BUILD_DIR/gettext/bin:$PATH

    echo "-----> done installing gettext msgfmt"
fi

rm -rf .heroku/vendor/gettext/

# Ensure that Django is explicitly specified in requirements.txt
pip-grep -s requirements.txt django Django && DJANGO_INSTALLED=1

if [ -f "$MANAGE_FILE" ] && [ "$DJANGO_INSTALLED" ]; then
    set +e

    puts-cmd "python $MANAGE_FILE compilemessages -v0"

    # Run collectstatic, cleanup some of the noisy output.
    python $MANAGE_FILE compilemessages -v0 --traceback 2>&1

    echo
fi

